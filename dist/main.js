(()=>{"use strict";var e={208:(e,t,n)=>{n.d(t,{A:()=>c});var o=n(354),r=n.n(o),i=n(314),a=n.n(i)()(r());a.push([e.id,"body {\n    height: 100vh;\n    width: 100vw;\n    padding: 0px;\n    margin: 0px;\n    display: grid;\n    grid-template: 1fr 5fr / 1fr 7fr;\n}\n\n.title {\n    grid-row: 1 / 2;\n    grid-column: 1 / 3;\n    justify-self: center;\n    font-size: 100px;\n}\n\n.navbar {\n    display: flex;\n    flex-direction: column;\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    border: 1px solid black;\n    border-right: none;\n}\n\n.navbar > button{\n    border-style: none;\n}\n\n#projectHeader {\n    display: flex;\n    flex-direction: column;\n    font-size: 20px;\n}\n\n#projectHeader > div {\n    align-self: center;\n}\n\n.content {\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    border: 1px solid black;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,aAAa;IACb,gCAAgC;AACpC;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,oBAAoB;IACpB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,eAAe;IACf,kBAAkB;IAClB,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,eAAe;AACnB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,uBAAuB;AAC3B",sourcesContent:["body {\n    height: 100vh;\n    width: 100vw;\n    padding: 0px;\n    margin: 0px;\n    display: grid;\n    grid-template: 1fr 5fr / 1fr 7fr;\n}\n\n.title {\n    grid-row: 1 / 2;\n    grid-column: 1 / 3;\n    justify-self: center;\n    font-size: 100px;\n}\n\n.navbar {\n    display: flex;\n    flex-direction: column;\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    border: 1px solid black;\n    border-right: none;\n}\n\n.navbar > button{\n    border-style: none;\n}\n\n#projectHeader {\n    display: flex;\n    flex-direction: column;\n    font-size: 20px;\n}\n\n#projectHeader > div {\n    align-self: center;\n}\n\n.content {\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    border: 1px solid black;\n}"],sourceRoot:""}]);const c=a},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],c=0;c<e.length;c++){var d=e[c],l=o.base?d[0]+o.base:d[0],s=i[l]||0,u="".concat(l," ").concat(s);i[l]=s+1;var p=n(u),f={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(f);else{var m=r(f,o);o.byIndex=c,t.splice(c,0,{identifier:u,updater:m,references:1})}a.push(u)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=n(i[a]);t[c].references--}for(var d=o(e,r),l=0;l<i.length;l++){var s=n(i[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=d}}},659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(72),t=n.n(e),o=n(825),r=n.n(o),i=n(659),a=n.n(i),c=n(56),d=n.n(c),l=n(540),s=n.n(l),u=n(113),p=n.n(u),f=n(208),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=s(),t()(f.A,m),f.A&&f.A.locals&&f.A.locals;const A={},v=(e,t,n,o,r,i)=>{A[e][t].title=n,A[e][t].description=o,A[e][t].dueDate=r,A[e][t].priority=i},y=document.getElementById("newProject"),g=document.getElementById("projectHeader"),B=document.getElementById("projectName"),C=document.getElementById("projectDialog"),I=document.getElementById("projectForm"),b=document.getElementById("projectSubmit"),h=document.getElementById("noteContainer"),E=document.getElementById("noteDialog"),x=document.getElementById("noteForm"),k=document.getElementById("noteTitle"),w=document.getElementById("noteDescription"),j=document.getElementById("noteDueDate"),D=document.getElementById("notePriority"),L=document.getElementById("noteSubmit"),S=document.getElementById("editDialog"),T=(document.getElementById("editForm"),document.getElementById("editTitle")),N=document.getElementById("editDescription"),M=document.getElementById("editDueDate"),O=document.getElementById("editPriority"),P=document.getElementById("editSubmit"),H=document.getElementById("all"),F=document.querySelectorAll("#cancel");let R="",z="",U="no";!function(){function e(e){e.preventDefault(),C.close()}y.addEventListener("click",(function(){C.open=!0,I.reset()})),b.addEventListener("click",(function(){if(""==B.value)return;if(1==Object.hasOwn(A,B.value))return void alert("Cannot repeat project name");const e=document.createElement("div");g.insertBefore(e,y);const t=function(e){if(1!=Object.hasOwn(A,e))return A[e]={},{projectDeleter:()=>{delete A[e]}}}(B.value);(function(e,t){const n=document.createElement("button");n.textContent=`${e}`,n.setAttribute("id",e),n.addEventListener("click",(function(){U="no",R=e,Y.clearDisplay(),Y.newNoteBtnAppend();for(const t in A[e])z=t,Y.showNote(t)})),t.appendChild(n)})(B.value,e),function(e,t){const n=document.createElement("button");n.textContent="X",n.classList.add("projectDeleteBtn"),n.addEventListener("click",(function(){e.projectDeleter(),t.remove()})),t.appendChild(n)}(t,e)})),H.addEventListener("click",(function(){Y.clearDisplay(),U="yes";for(const e in A)R=e,Y.noteDisplay()})),F.forEach((t=>t.onclick=()=>e))}();const Y=function(){const e=document.createElement("div"),t=document.createElement("button");e.classList.add("noteInstance"),t.classList.add("newNoteBtn"),L.addEventListener("click",(function(){if(""==k.value)return void alert("Please input a title");const e=function(e,t,n,o){const r={title:e,description:t,dueDate:n,priority:o};return{noteAdder:t=>{A[t][e]=r}}}(k.value,w.value,j.value,D.value);z=k.value,e.noteAdder(R),n(k.value)}));const n=t=>{let n=R,o=z;const r=document.createElement("div");r.classList.add("titleContainer"),e.appendChild(r);const i=document.createElement("div");i.classList.add("titleDisplay"),i.setAttribute("id",`${z}`),i.textContent=A[R][t].title,r.appendChild(i),function(e){const t=document.createElement("button");t.classList.add("editBtn"),t.textContent="Edit",e.appendChild(t),t.addEventListener("click",(function(){R=n,z=o,console.log(i),T.value=A[R][z].title,N.value=A[R][z].description,M.value=A[R][z].dueDate,O.value=A[R][z].priority,S.open=!0})),P.addEventListener("click",(function(){""!=T.value?(v(R,z,T.value,N.value,M.value,O.value),document.getElementById(`${z}`).textContent=T.value):alert("Please input a title")}))}(r),function(e){const t=document.createElement("button");t.classList.add("deleteBtn"),t.textContent="Delete",e.appendChild(t)}(r)};return{clearDisplay:function(){e.innerHTML=""},showNote:n,newNoteBtnAppend:()=>{t.textContent="+",t.addEventListener("click",(function(){E.open=!0,x.reset()})),h.appendChild(e),h.appendChild(t)}}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,