(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>u});var o=t(354),r=t.n(o),i=t(314),c=t.n(i),a=t(417),A=t.n(a),l=new URL(t(944),t.b),d=c()(r()),s=A()(l);d.push([n.id,`@font-face {\n    font-family: typewriter;\n    src: url(${s});\n}\n\n:root {\n    font-family: typewriter;\n    color: #675D50;\n}\n\nbody {\n    height: 100vh;\n    width: 100vw;\n    padding: 0px;\n    margin: 0px;\n    display: grid;\n    grid-template: 1fr 5fr / 1fr 7fr;\n\n}\n\nbutton {\n    font-family: typewriter;\n    border-style: none;\n    color: #675D50;\n    background-color: white;\n} \n\nbutton:hover {\n    background-color: #F4991A;\n}\n\nbutton:focus {\n    background-color: #F4991A;\n}\n\ninput {\n    font-family: typewriter;\n}\n\n.title {\n    grid-row: 1 / 2;\n    grid-column: 1 / 3;\n    justify-self: center;\n    font-size: 100px;\n}\n\n.navbar {\n    display: flex;\n    flex-direction: column;\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    width: 100%;\n    margin: 10px;\n    margin-left: 0px;\n    margin-right: 0px;\n    background-color: #F9F2ED;\n}\n\n.navbar > button{\n    border-style: none;\n    font-size: 20px;\n    background-color: #F9F2ED;\n}\n\n.navbar > button:hover {\n    background-color: #F4991A;\n}\n\n.navbar > button:focus {\n    background-color: #F4991A;\n}\n\n#projectHeader {\n    display: flex;\n    flex-direction: column;\n}\n\n#projects {\n    display: flex;\n    justify-content: center;\n    height: fit-content;\n    width: 100%;\n    font-size: 30px;\n    border-bottom: 5px solid #F4991A;\n}\n\n.projectContainer {\n    display: flex;\n    justify-content: center;\n    align-self: center;\n    font-size: 50px;\n    height: 30px;\n    width: 100%;\n    margin: 5px;\n}\n\n.projectContainer > button {\n    font-size: 20px;\n    background-color: #F9F2ED;\n}\n\n.projectContainer > button:hover {\n    background-color: #F4991A;\n}\n\n.projectContainer > button:focus {\n    background-color: #F4991A;\n}\n\n#newProject {\n    background-color: #d9d9d9;\n    width: 100%;\n    font-size: 20px;\n}\n\n#newProject:hover {\n    background-color: #F4991A;\n}\n\n.content {\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    background-color: #F9F6F7;\n    margin: 10px;\n    margin-left: 0px;\n}\n\n.noteEntry {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 25px;\n    border: #F4991A 1px solid;\n    border-left: #F4991A 10px solid;\n    padding: 10px;\n    margin-top: 10px;\n    margin-left: 10px;\n    margin-right: 10px;\n}\n\n.doneBox {\n    height: 15px;\n    width: 15px;\n    accent-color: #F5B553;\n}\n\n.titleContainer {\n    display: flex;\n    align-items: baseline;\n}\n\n.editBtn, .deleteBtn {\n    background-color: #F9F6F7;\n}\n\n.newNoteBtn {\n    color: white;\n    background-color: #F4991A;\n    border-radius: 100%;\n    font-size: 20px;\n    width: 40px;\n    height: 40px;\n    margin: 10px;\n}\n\n[cssPriority='high'] {\n    color: #973131;\n    border: #973131 1px solid;\n    border-left: #973131 10px solid;\n}\n\n#projectDialog, #noteDialog, #editDialog{\n    border: black solid 1px;\n    top: 300px;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,4CAAoC;AACxC;;AAEA;IACI,uBAAuB;IACvB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,aAAa;IACb,gCAAgC;;AAEpC;;AAEA;IACI,uBAAuB;IACvB,kBAAkB;IAClB,cAAc;IACd,uBAAuB;AAC3B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,oBAAoB;IACpB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,eAAe;IACf,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,iBAAiB;IACjB,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,WAAW;IACX,eAAe;IACf,gCAAgC;AACpC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,kBAAkB;IAClB,eAAe;IACf,YAAY;IACZ,WAAW;IACX,WAAW;AACf;;AAEA;IACI,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;IACzB,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,yBAAyB;IACzB,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,eAAe;IACf,yBAAyB;IACzB,+BAA+B;IAC/B,aAAa;IACb,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,qBAAqB;AACzB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,yBAAyB;IACzB,mBAAmB;IACnB,eAAe;IACf,WAAW;IACX,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,yBAAyB;IACzB,+BAA+B;AACnC;;AAEA;IACI,uBAAuB;IACvB,UAAU;AACd",sourcesContent:["@font-face {\n    font-family: typewriter;\n    src: url('Font/JMH\\ Typewriter.ttf');\n}\n\n:root {\n    font-family: typewriter;\n    color: #675D50;\n}\n\nbody {\n    height: 100vh;\n    width: 100vw;\n    padding: 0px;\n    margin: 0px;\n    display: grid;\n    grid-template: 1fr 5fr / 1fr 7fr;\n\n}\n\nbutton {\n    font-family: typewriter;\n    border-style: none;\n    color: #675D50;\n    background-color: white;\n} \n\nbutton:hover {\n    background-color: #F4991A;\n}\n\nbutton:focus {\n    background-color: #F4991A;\n}\n\ninput {\n    font-family: typewriter;\n}\n\n.title {\n    grid-row: 1 / 2;\n    grid-column: 1 / 3;\n    justify-self: center;\n    font-size: 100px;\n}\n\n.navbar {\n    display: flex;\n    flex-direction: column;\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    width: 100%;\n    margin: 10px;\n    margin-left: 0px;\n    margin-right: 0px;\n    background-color: #F9F2ED;\n}\n\n.navbar > button{\n    border-style: none;\n    font-size: 20px;\n    background-color: #F9F2ED;\n}\n\n.navbar > button:hover {\n    background-color: #F4991A;\n}\n\n.navbar > button:focus {\n    background-color: #F4991A;\n}\n\n#projectHeader {\n    display: flex;\n    flex-direction: column;\n}\n\n#projects {\n    display: flex;\n    justify-content: center;\n    height: fit-content;\n    width: 100%;\n    font-size: 30px;\n    border-bottom: 5px solid #F4991A;\n}\n\n.projectContainer {\n    display: flex;\n    justify-content: center;\n    align-self: center;\n    font-size: 50px;\n    height: 30px;\n    width: 100%;\n    margin: 5px;\n}\n\n.projectContainer > button {\n    font-size: 20px;\n    background-color: #F9F2ED;\n}\n\n.projectContainer > button:hover {\n    background-color: #F4991A;\n}\n\n.projectContainer > button:focus {\n    background-color: #F4991A;\n}\n\n#newProject {\n    background-color: #d9d9d9;\n    width: 100%;\n    font-size: 20px;\n}\n\n#newProject:hover {\n    background-color: #F4991A;\n}\n\n.content {\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    background-color: #F9F6F7;\n    margin: 10px;\n    margin-left: 0px;\n}\n\n.noteEntry {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 25px;\n    border: #F4991A 1px solid;\n    border-left: #F4991A 10px solid;\n    padding: 10px;\n    margin-top: 10px;\n    margin-left: 10px;\n    margin-right: 10px;\n}\n\n.doneBox {\n    height: 15px;\n    width: 15px;\n    accent-color: #F5B553;\n}\n\n.titleContainer {\n    display: flex;\n    align-items: baseline;\n}\n\n.editBtn, .deleteBtn {\n    background-color: #F9F6F7;\n}\n\n.newNoteBtn {\n    color: white;\n    background-color: #F4991A;\n    border-radius: 100%;\n    font-size: 20px;\n    width: 40px;\n    height: 40px;\n    margin: 10px;\n}\n\n[cssPriority='high'] {\n    color: #973131;\n    border: #973131 1px solid;\n    border-left: #973131 10px solid;\n}\n\n#projectDialog, #noteDialog, #editDialog{\n    border: black solid 1px;\n    top: 300px;\n}\n"],sourceRoot:""}]);const u=d},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(o)for(var a=0;a<this.length;a++){var A=this[a][0];null!=A&&(c[A]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);o&&c[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},c=[],a=0;a<n.length;a++){var A=n[a],l=o.base?A[0]+o.base:A[0],d=i[l]||0,s="".concat(l," ").concat(d);i[l]=d+1;var u=t(s),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=r(p,o);o.byIndex=a,e.splice(a,0,{identifier:s,updater:f,references:1})}c.push(s)}return c}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var c=0;c<i.length;c++){var a=t(i[c]);e[a].references--}for(var A=o(n,r),l=0;l<i.length;l++){var d=t(i[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=A}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},944:(n,e,t)=>{n.exports=t.p+"cfe2f95116145cd7bacf.ttf"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!n||!/^http(s?):/.test(n));)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(72),e=t.n(n),o=t(825),r=t.n(o),i=t(659),c=t.n(i),a=t(56),A=t.n(a),l=t(540),d=t.n(l),s=t(113),u=t.n(s),p=t(208),f={};f.styleTagTransform=u(),f.setAttributes=A(),f.insert=c().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=d(),e()(p.A,f),p.A&&p.A.locals&&p.A.locals;let m={};const g=(n,e)=>{delete m[n][e],localStorage.setItem("projectLibraryStorage",JSON.stringify(m))},B=(n,e,t,o,r,i)=>{m[n][e].title=t,m[n][e].description=o,m[n][e].dueDate=r,m[n][e].priority=i,localStorage.setItem("projectLibraryStorage",JSON.stringify(m))};function y(n){return function(n,e){return n instanceof Date?new n.constructor(e):new Date(e)}(n,Date.now())}function C(n){const e=Object.prototype.toString.call(n);return n instanceof Date||"object"==typeof n&&"[object Date]"===e?new n.constructor(+n):"number"==typeof n||"[object Number]"===e||"string"==typeof n||"[object String]"===e?new Date(n):new Date(NaN)}function b(n){const e=C(n);return e.setHours(0,0,0,0),e}function I(n){return e=n,t=y(n),+b(e)==+b(t);var e,t}let h={};function v(){return h}function x(n,e){const t=v(),o=e?.weekStartsOn??e?.locale?.options?.weekStartsOn??t.weekStartsOn??t.locale?.options?.weekStartsOn??0,r=C(n),i=r.getDay(),c=(i<o?7:0)+i-o;return r.setDate(r.getDate()-c),r.setHours(0,0,0,0),r}function E(n,e){return function(n,e,t){return+x(n,t)==+x(e,t)}(n,y(n),e)}const w=t.p+"4cad70953b302c2ee888.svg",k=t.p+"bba7f8a90befcbd8f9c0.svg",j=document.getElementById("newProject"),D=document.getElementById("projectHeader"),F=document.getElementById("projectName"),S=document.getElementById("projectDialog"),L=document.getElementById("projectForm"),N=document.getElementById("projectSubmit"),z=document.getElementById("noteContainer"),O=document.getElementById("noteInstance"),Y=document.getElementById("noteDialog"),P=document.getElementById("noteForm"),W=document.getElementById("noteTitle"),T=document.getElementById("noteDescription"),$=document.getElementById("noteDueDate"),M=document.getElementById("noteSubmit"),H=document.getElementById("editDialog"),J=document.getElementById("editTitle"),q=document.getElementById("editDescription"),U=document.getElementById("editDueDate"),X=document.getElementById("editSubmit"),Z=document.getElementById("all"),R=document.getElementById("today"),_=document.getElementById("thisWeek"),Q=document.getElementById("completed"),G=document.querySelectorAll("#cancel");let K="",V="";const nn=function(){const n=document.createElement("button");n.classList.add("newNoteBtn"),M.addEventListener("click",(function(){if(""==W.value)return void alert("Please input a title");if(m[K][W.value])return void alert("Cannot repeat title, please choose another title.");const n=function(n,e,t,o){const r={title:n,description:e,dueDate:t,priority:o,completion:"Not done"};return{noteAdder:e=>{m[e][n]=r,localStorage.setItem("projectLibraryStorage",JSON.stringify(m))}}}(W.value,T.value,$.value,document.querySelector("input[name = priority]:checked").value);V=W.value,n.noteAdder(K),e(W.value)}));const e=n=>{let e=K,t=V;const o=document.createElement("div"),r=document.createElement("div"),i=document.createElement("div");o.classList.add("noteEntry"),r.classList.add("titleContainer"),i.classList.add("buttonContainer"),O.appendChild(o),o.appendChild(r),o.appendChild(i);const c=document.createElement("input");c.setAttribute("type","checkbox"),c.setAttribute("value","done"),c.setAttribute("class","doneBox"),c.addEventListener("change",(function(){K=e,V=t,1==c.checked?(m[K][V].completion="Done",a.setAttribute("completion","Done")):(m[K][V].completion="Not done",a.setAttribute("completion","Not Done")),localStorage.setItem("projectLibraryStorage",JSON.stringify(m))})),r.appendChild(c),"Done"==m[K][V].completion&&(c.checked=!0);const a=document.createElement("div");a.classList.add("titleDisplay"),a.setAttribute("id",`${V}`),a.setAttribute("completion",`${m[K][V].completion}`),o.setAttribute("cssPriority",`${m[K][V].priority}`),o.setAttribute("id",`css${V}`),a.textContent=m[K][n].title,r.appendChild(a);const A=document.createElement("button");let l=new Image;l.src=w,A.classList.add("editBtn"),i.appendChild(A),A.appendChild(l),A.addEventListener("click",(function(){K=e,V=t,J.value=m[K][V].title,q.value=m[K][V].description,U.value=m[K][V].dueDate,"high"==m[K][V].priority?document.getElementById("editHigh").checked=!0:document.getElementById("editNormal").checked=!0,H.open=!0})),X.addEventListener("click",(function(){""!=J.value?(B(K,V,J.value,q.value,U.value,document.querySelector("input[name = editPriority]:checked").value),document.getElementById(`${V}`).textContent=J.value,document.getElementById(`css${V}`).setAttribute("cssPriority",`${m[K][V].priority}`)):alert("Please input a title")}));const d=document.createElement("button");let s=new Image;s.src=k,d.addEventListener("click",(function(){K=e,V=t,g(K,V),o.remove()})),d.classList.add("deleteBtn"),i.appendChild(d),d.appendChild(s)};return{clearDisplay:function(){O.innerHTML="",n.remove()},showNote:e,newNoteBtnAppend:()=>{n.textContent="+",n.addEventListener("click",(function(){Y.open=!0,P.reset()})),z.appendChild(n)}}}();!function(){let n=JSON.parse(localStorage.getItem("projectLibraryStorage"));if(n&&0!==Object.keys(n).length){m=n;for(const n in m){const e=document.createElement("div");e.classList.add("projectContainer"),D.insertBefore(e,j),o(n,e),t(n,e)}r()}function e(n){n.preventDefault(),S.close()}function t(n,e){const t=document.createElement("button");t.textContent="X",t.classList.add("projectDeleteBtn"),t.addEventListener("click",(function(){(function(n){delete m[n],localStorage.setItem("projectLibraryStorage",JSON.stringify(m))})(n),e.remove()})),e.appendChild(t)}function o(n,e){const t=document.createElement("button");t.textContent=`${n}`,t.setAttribute("id",n),t.addEventListener("click",(function(){K=n,nn.clearDisplay(),nn.newNoteBtnAppend();for(const e in m[n])V=e,nn.showNote(e)})),e.appendChild(t)}function r(){nn.clearDisplay();for(const n in m){K=n;for(const e in m[n])V=e,nn.showNote(e)}}j.addEventListener("click",(function(){S.open=!0,L.reset()})),N.addEventListener("click",(function(){if(""==F.value)return;if(m[F.value])return void alert("Cannot repeat project name, please choose another name.");const n=document.createElement("div");var e;n.classList.add("projectContainer"),D.insertBefore(n,j),e=F.value,m[e]={},localStorage.setItem("projectLibraryStorage",JSON.stringify(m)),o(F.value,n),t(F.value,n)})),Z.addEventListener("click",r),R.addEventListener("click",(function(){nn.clearDisplay();for(const n in m){K=n;for(const e in m[n])1==I(new Date(m[n][e].dueDate))&&(V=e,nn.showNote(e))}})),_.addEventListener("click",(function(){nn.clearDisplay();for(const n in m){K=n;for(const e in m[n])1==E(new Date(m[n][e].dueDate))&&(V=e,nn.showNote(e))}})),Q.addEventListener("click",(function(){nn.clearDisplay();for(const n in m){K=n;for(const e in m[n])"Done"==m[n][e].completion&&(V=e,nn.showNote(e))}})),G.forEach((n=>n.onclick=()=>e))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,