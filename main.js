(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>a});var o=t(354),r=t.n(o),i=t(314),c=t.n(i)()(r());c.push([e.id,"body {\n    height: 100vh;\n    width: 100vw;\n    padding: 0px;\n    margin: 0px;\n    display: grid;\n    grid-template: 1fr 5fr / 1fr 7fr;\n}\n\n.title {\n    grid-row: 1 / 2;\n    grid-column: 1 / 3;\n    justify-self: center;\n    font-size: 100px;\n}\n\n.navbar {\n    display: flex;\n    flex-direction: column;\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    border: 1px solid black;\n    border-right: none;\n}\n\n.navbar > button{\n    border-style: none;\n}\n\n#projectHeader {\n    display: flex;\n    flex-direction: column;\n    font-size: 20px;\n}\n\n#projectHeader > div {\n    align-self: center;\n}\n\n.content {\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    border: 1px solid black;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,aAAa;IACb,gCAAgC;AACpC;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,oBAAoB;IACpB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,eAAe;IACf,kBAAkB;IAClB,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,eAAe;AACnB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,uBAAuB;AAC3B",sourcesContent:["body {\n    height: 100vh;\n    width: 100vw;\n    padding: 0px;\n    margin: 0px;\n    display: grid;\n    grid-template: 1fr 5fr / 1fr 7fr;\n}\n\n.title {\n    grid-row: 1 / 2;\n    grid-column: 1 / 3;\n    justify-self: center;\n    font-size: 100px;\n}\n\n.navbar {\n    display: flex;\n    flex-direction: column;\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    border: 1px solid black;\n    border-right: none;\n}\n\n.navbar > button{\n    border-style: none;\n}\n\n#projectHeader {\n    display: flex;\n    flex-direction: column;\n    font-size: 20px;\n}\n\n#projectHeader > div {\n    align-self: center;\n}\n\n.content {\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    border: 1px solid black;\n}"],sourceRoot:""}]);const a=c},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(c[d]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&c[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),n.push(s))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},c=[],a=0;a<e.length;a++){var d=e[a],l=o.base?d[0]+o.base:d[0],s=i[l]||0,u="".concat(l," ").concat(s);i[l]=s+1;var p=t(u),f={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)n[p].references++,n[p].updater(f);else{var m=r(f,o);o.byIndex=a,n.splice(a,0,{identifier:u,updater:m,references:1})}c.push(u)}return c}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<i.length;c++){var a=t(i[c]);n[a].references--}for(var d=o(e,r),l=0;l<i.length;l++){var s=t(i[l]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}i=d}}},659:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(72),n=t.n(e),o=t(825),r=t.n(o),i=t(659),c=t.n(i),a=t(56),d=t.n(a),l=t(540),s=t.n(l),u=t(113),p=t.n(u),f=t(208),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=c().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=s(),n()(f.A,m),f.A&&f.A.locals&&f.A.locals;const A={},v=(e,n)=>{delete A[e][n]},y=(e,n,t,o,r,i)=>{A[e][n].title=t,A[e][n].description=o,A[e][n].dueDate=r,A[e][n].priority=i,console.log(A[e][t])},g=document.getElementById("newProject"),B=document.getElementById("projectHeader"),I=document.getElementById("projectName"),C=document.getElementById("projectDialog"),b=document.getElementById("projectForm"),E=document.getElementById("projectSubmit"),h=document.getElementById("noteContainer"),x=document.getElementById("noteDialog"),k=document.getElementById("noteForm"),D=document.getElementById("noteTitle"),j=document.getElementById("noteDescription"),w=document.getElementById("noteDueDate"),L=document.getElementById("notePriority"),S=document.getElementById("noteSubmit"),T=document.getElementById("editDialog"),M=(document.getElementById("editForm"),document.getElementById("editTitle")),O=document.getElementById("editDescription"),H=document.getElementById("editDueDate"),N=document.getElementById("editPriority"),P=document.getElementById("editSubmit"),F=document.getElementById("all"),R=document.querySelectorAll("#cancel");let z="",U="";!function(){function e(e){e.preventDefault(),C.close()}g.addEventListener("click",(function(){C.open=!0,b.reset()})),E.addEventListener("click",(function(){if(""==I.value)return;if(1==Object.hasOwn(A,I.value))return void alert("Cannot repeat project name");const e=document.createElement("div");B.insertBefore(e,g);const n=function(e){if(1!=Object.hasOwn(A,e))return A[e]={},{projectDeleter:()=>{delete A[e]}}}(I.value);(function(e,n){const t=document.createElement("button");t.textContent=`${e}`,t.setAttribute("id",e),t.addEventListener("click",(function(){z=e,Y.clearDisplay(),Y.noteDisplay()})),n.appendChild(t)})(I.value,e),function(e,n){const t=document.createElement("button");t.textContent="X",t.classList.add("projectDeleteBtn"),t.addEventListener("click",(function(){e.projectDeleter(),n.remove()})),n.appendChild(t)}(n,e)})),F.addEventListener("click",(function(){Y.clearDisplay();for(const e in A)z=e,Y.noteDisplay()})),R.forEach((n=>n.onclick=()=>e))}();const Y=function(){const e=document.createElement("div"),n=document.createElement("button");function t(){e.innerHTML=""}function o(){let n="";for(const r in A[z]){const i=document.createElement("div");n=z,i.classList.add("titleDisplay"),i.textContent=A[z][r].title,e.appendChild(i),t(r,i),o(r,i)}function t(e,t){const o=document.createElement("button");o.addEventListener("click",(function(){z=n,U=e,M.value=A[z][U].title,O.value=A[z][U].description,H.value=A[z][U].dueDate,N.value=A[z][U].priority,T.open=!0,console.log(U)})),o.classList.add("editBtn"),o.textContent="Edit",t.appendChild(o)}function o(e,t){const o=document.createElement("button");o.addEventListener("click",(function(){z=n,U=e,v(z,U),titleDisplay.remove()})),o.classList.add("deleteBtn"),o.textContent="Delete",t.appendChild(o)}}return e.classList.add("noteInstance"),n.classList.add("newNoteBtn"),S.addEventListener("click",(function(){(function(e,n,t,o){const r={title:e,description:n,dueDate:t,priority:o};return{noteAdder:n=>{A[n][e]=r}}})(D.value,j.value,w.value,L.value).noteAdder(z),t(),o()})),P.addEventListener("click",(function(){y(z,U,M.value,O.value,H.value,N.value),t(),o(),console.log(A[z])})),{noteDisplay:()=>{n.textContent="+",n.addEventListener("click",(function(){x.open=!0,k.reset()})),o(),h.appendChild(e),h.appendChild(n)},clearDisplay:t}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,